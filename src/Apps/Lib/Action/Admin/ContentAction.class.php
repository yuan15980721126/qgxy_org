<?php/** * * Content(内容管理模块) * * @package        YOURPHP * @author          liuxun QQ:147613338 <web@yourphp.cn> * @copyright        Copyright (c) 2008-2011  (http://www.yourphp.cn) * @license         http://www.yourphp.cn/license.txt * @version            YourPHP企业网站管理系统 v2.1 2012-10-08 yourphp.cn $ */if (!defined("Yourphp")) exit("Access Denied");class ContentAction extends AdminbaseAction{    protected $dao, $fields;    public function _initialize()    {        parent::_initialize();        $module = $this->module[$this->moduleid]['name'];        $this->dao = D($module);        $fields = F($this->moduleid . '_Field');        foreach ($fields as $key => $res) {            $res['setup'] = string2array($res['setup']);            $this->fields[$key] = $res;        }        unset($fields);        unset($res);        $this->assign('fields', $this->fields);    }    /**     * 列表     *     */    public function index()    {        // THEME_PATH == './Yourphp/Tpl/Admin/Default/';        // $this->assign('mode_name',MODULE_NAME);        $template = file_exists(THEME_PATH . MODULE_NAME . '_index.html') ? MODULE_NAME . ':index' : 'Content:index';        $childModules = array();        foreach ($this->module as $key => $value) {            if ($this->moduleid == $value['parent_moduleid']) {                $menu = M('Menu')->where(array('model' => ucfirst($value['name']), 'action' => 'index'))->find();                if ($menu) {                    $value['menuid'] = $menu['id'];                }                $childModules[] = $value;            }        }        $this->assign('pmidname', strtolower($this->currentModule['name'] . '_id'));        $this->assign('childModules', $childModules);        $this->_list(MODULE_NAME);        if(MODULE_NAME == 'Icon'){        }        $this->display($template);    }    public function add()    {        //新增超级管理员和信用标识管理会员才能操作信用标识模块        if(!in_array($_SESSION['groupid'],$this->group_list) && MODULE_NAME == 'Identification'){            $this->error(L('_VALID_ACCESS_'));        }        $vo['catid'] = intval($_GET['catid']);        $form = new Form($vo);        $form->isadmin = 1;        $this->assign('form', $form);        $template = file_exists(THEME_PATH . MODULE_NAME . '_edit.html') ? MODULE_NAME . ':edit' : 'Content:edit';        $this->display($template);    }    public function edit()    {        //新增超级管理员和信用标识管理会员才能操作信用标识模块        if(!in_array($_SESSION['groupid'],$this->group_list) && MODULE_NAME == 'Identification'){            $this->error(L('_VALID_ACCESS_'));        }        $id = $_REQUEST ['id'];        if (MODULE_NAME == 'Page') {            $Page = D('Page');            $p = $Page->find($id);            if (empty($p)) {                $data['id'] = $id;                $data['title'] = $this->categorys[$id]['catname'];                $data['keywords'] = $this->categorys[$id]['keywords'];                $Page->add($data);            }        }        $vo = $this->dao->getById($id);        $vo['content'] = htmlspecialchars($vo['content']);        //to-do: 这里需要判断有没有副栏目字段，如果有，从副栏目得到选中的数据放到$vo的对应字段名中里。        $relatedId = hasCatalogField($this->moduleid);        if ($relatedId) {            $vo[$relatedId] = $this->getCatalogData($id);        }        $form = new Form($vo);        $this->assign('vo', $vo);        if(MODULE_NAME == 'Identification') {            if ($vo['card']) {                $card_list = explode(",", $vo['card']);                $this->assign('card_list', $card_list);            }            if ($vo['overview']) {                $overview_list = explode(",", $vo['overview']);                $this->assign('overview_list', $overview_list);            }            if ($vo['license']) {                $license_list = explode(",", $vo['license']);                $this->assign('license_list', $license_list);            }            if ($vo['intellectual']) {                $intellectual_list = explode(",", $vo['intellectual']);                $this->assign('intellectual_list', $intellectual_list);            }            if ($vo['promise']) {                $promise_list = explode(",", $vo['promise']);                $this->assign('promise_list', $promise_list);            }            if ($vo['honor']) {                $honor_list = explode(",", $vo['honor']);                $this->assign('honor_list', $honor_list);            }            $optionss = explode(":::", $vo['panoramic']);//多图        }//        echo '<pre>';//        print_r($optionss);        $this->assign('form', $form);        $template = file_exists(THEME_PATH . MODULE_NAME . '_edit.html') ? MODULE_NAME . ':edit' : 'Content:edit';        $this->display($template);    }    // add by jzp    private function getCatalogData($id, $module = '')    {        $relatedId = hasCatalogField($this->moduleid);        if (!$relatedId) {            return array();        }        $module = $module ? $module : MODULE_NAME;        $modelCat = M($module . '_catalog');        $primaryKey = strtolower($module) . '_id';        $catsData = $modelCat->field($relatedId)->where(array($primaryKey => $id))->select();        $result = array();        foreach ($catsData as $item) {            $result[] = $item[$relatedId];        }        return $result;    }    // add by jzp    private function insertCatalog($id, $module = '')    {        $relatedId = hasCatalogField($this->moduleid);        if (!$relatedId || !isset($_POST[$relatedId])) {            return;        }        $cat_ids = $_POST[$relatedId];        if (is_string($_POST[$relatedId])) {            $cat_ids = array($cat_ids);        }        $module = $module ? $module : MODULE_NAME;        $modelCat = M($module . '_catalog');        $primaryKey = strtolower($module) . '_id';        foreach ($cat_ids as $val) {            $modelCat->$primaryKey = $id;            $modelCat->$relatedId = $val;            $modelCat->add();        }    }    // add by jzp    private function deleteCatalog($id, $module = '')    {        $relatedId = hasCatalogField($this->moduleid);        if (!$relatedId) {            return;        }        $cat_ids = $_POST[$relatedId];        if (is_string($_POST[$relatedId])) {            $cat_ids = array($cat_ids);        }        $module = $module ? $module : MODULE_NAME;        $modelCat = M($module . '_catalog');        $primaryKey = strtolower($module) . '_id';        $modelCat->where(array($primaryKey => $id))->delete();    }    /**     * 录入     *     */    public function insert($module = '', $fields = array(), $userid = 0, $username = '', $groupid = 0)    {        //新增超级管理员和信用标识管理会员才能操作信用标识模块        if(!in_array($_SESSION['groupid'],$this->group_list) && MODULE_NAME == 'Identification'){            $this->error(L('_VALID_ACCESS_'));        }        $model = $module ? M($module) : $this->dao;        $fields = $fields ? $fields : $this->fields;        if ($fields['verifyCode']['status'] && (md5($_POST['verifyCode']) != $_SESSION['verify'])) {            $this->assign('jumpUrl', 'javascript:history.go(-1);');            $this->error(L('error_verify'));        }        $_POST = checkfield($fields, $_POST);        if (empty($_POST)) $this->error(L('do_empty'));        // $_POST['createtime'] = time();        // $_POST['updatetime'] = $_POST['createtime'];        if (!$_POST['createtime']) $_POST['createtime'] = time();        $_POST['updatetime'] = time();        $_POST['userid'] = $module ? $userid : $_SESSION['userid'];        $_POST['username'] = $module ? $username : $_SESSION['username'];        if ($_POST['style_color']) $_POST['style_color'] = 'color:' . $_POST['style_color'];        if ($_POST['style_bold']) $_POST['style_bold'] = ';font-weight:' . $_POST['style_bold'];        if ($_POST['style_color'] || $_POST['style_bold']) $_POST['title_style'] = $_POST['style_color'] . $_POST['style_bold'];        $module = $module ? $module : MODULE_NAME;        if (GROUP_NAME == 'User') $_POST['status'] = $this->Role[$groupid]['allowpostverify'] ? 1 : 0;        //新增信用标识管理会员添加后状态为未审核        if($_SESSION['groupid'] == 6 && in_array(MODULE_NAME,$this->limit_list)){            $_POST['status']= 0;        }        if(MODULE_NAME == 'Identification'){            $_POST['promise'] = $_POST['promise'] ? implode(',',$_POST['promise']) : '';            $_POST['honor'] = $_POST['honor'] ? implode(',',$_POST['honor']) : '';            $_POST['card'] = $_POST['card'] ? implode(',',$_POST['card']) : '';        }        if (false === $model->create()) {            $this->error($model->getError());        }//        echo '<pre>';//        print_r($_POST);//        die;        $_POST['id'] = $id = $model->add();        if ($id !== false) {            $msg=$this->currentModule['title'].'--新增'.'['.'标题:'.$_POST['title'].']';            logs($_SESSION['username'],$msg);            $catid = $module == 'Page' ? $id : $_POST['catid'];            //to-do: 这里需要判断有没有副栏目字段， 如果有，就把副栏目的数据更新到对应的数据表中。            $relatedId = hasCatalogField($this->moduleid);            if ($relatedId && isset($_POST[$relatedId])) {                $this->insertCatalog($id);            }            if ($_POST['aid']) {                $Attachment = M('Attachment');                $aids = implode(',', $_POST['aid']);                $data['id'] = $id;                $data['catid'] = $catid;                $data['status'] = '1';                $Attachment->where("aid in (" . $aids . ")")->save($data);            }            $tablename = C('DB_PREFIX') . strtolower($module);            $db = D('');            $db = DB::getInstance();            $tables = $db->getTables();            $Fields = $db->getFields($tablename);            if (isset($Fields['url'])) {                $data = '';                $data['id'] = $id;                if ($catid) {                    $cat = $this->categorys[$catid];                    $url = geturl($cat, $_POST, $this->Urlrule);                    $data['url'] = $url[0];                } else {                    $data['url'] = U('Home/' . $module . '/show/', array('id' => id));                }                $model->save($data);            }            if ($_POST['keywords'] && $module != 'Page') {                $keywordsarr = explode(',', $_POST['keywords']);                $i = 0;                $tagsdata = M('Tags_data');                $tagsdata->where("id=" . $id)->delete();                foreach ((array)$keywordsarr as $tagname) {                    if ($tagname) {                        $tagidarr = $tagdatas = $where = array();                        $where['name'] = array('eq', $tagname);                        $where['moduleid'] = array('eq', $cat['moduleid']);                        $tagid = M('Tags')->where($where)->field('id')->find();                        $tagidarr['id'] = $id;                        if ($tagid) {                            $num = $tagsdata->where("tagid=" . $tagid[id])->count();                            $tagdatas['num'] = $num + 1;                            M('Tags')->where("id=" . $tagid[id])->save($tagdatas);                            $tagidarr['tagid'] = $tagid['id'];                        } else {                            $tagdatas['moduleid'] = $cat['moduleid'];                            $tagdatas['name'] = $tagname;                            $tagdatas['slug'] = Pinyin($tagname);                            $tagdatas['num'] = 1;                            $tagdatas['lang'] = $_POST['lang'];                            $tagdatas['module'] = $cat['module'];                            $tagidarr['tagid'] = M('Tags')->add($tagdatas);                        }                        $i++;                        $tagsdata->add($tagidarr);                    }                }            }            if ($cat['presentpoint']) {                $user = M('User');                if ($cat['presentpoint'] > 0) $user->where("id=" . $_POST['userid'])->setInc('point', $cat['presentpoint']);                if ($cat['presentpoint'] < 0) $user->where("id=" . $_POST['userid'])->setDec('point', $cat['presentpoint']);            }            if ($cat['ishtml'] && $_POST['status']) {                if ($module != 'Page' && $_POST['status']) $this->create_show($id, $module);                $arrparentid = array_filter(explode(',', $cat['arrparentid'] . ',' . $cat['id']));                foreach ($arrparentid as $catid) {                    if ($this->categorys[$catid]['ishtml']) $this->clisthtml($catid);                }            }            if ($this->sysConfig['HOME_ISHTML']) $this->create_index();            if (GROUP_NAME == 'Admin') {                $this->assign('jumpUrl', U($module . '/index', $this->parentParam));            } elseif (GROUP_NAME == 'User') {                $this->assign('jumpUrl', $_SERVER['HTTP_REFERER']);                //$this->assign ( 'jumpUrl', U(GROUP_NAME.'-'.MODULE_NAME.'/add?moduleid='.$cat['moduleid']) );            }            $this->success(L('add_ok'));        } else {            $this->error(L('add_error') . ': ' . $model->getDbError());        }    }    function update($module = '', $fields = array(), $userid = 0, $username = '')    {        //新增超级管理员和信用标识管理会员才能操作信用标识模块        if(!in_array($_SESSION['groupid'],$this->group_list) && MODULE_NAME == 'Identification'){            $this->error(L('_VALID_ACCESS_'));        }        $model = $module ? M($module) : $this->dao;        $fields = $fields ? $fields : $this->fields;        if ($fields['verifyCode']['status'] && (md5($_POST['verifyCode']) != $_SESSION['verify'])) {            $this->assign('jumpUrl', 'javascript:history.go(-1);');            $this->error(L('error_verify'));        }        $_POST = checkfield($fields, $_POST);        if (empty($_POST)) $this->error(L('do_empty'));        $_POST['updatetime'] = time();        if ($_POST['style_color']) $_POST['style_color'] = 'color:' . $_POST['style_color'];        if ($_POST['style_bold']) $_POST['style_bold'] = ';font-weight:' . $_POST['style_bold'];        if ($_POST['style_color'] || $_POST['style_bold']) $_POST['title_style'] = $_POST['style_color'] . $_POST['style_bold'];        if(MODULE_NAME == 'Identification'){            $_POST['promise'] = $_POST['promise'] ? implode(',',$_POST['promise']) : '';            $_POST['honor'] = $_POST['honor'] ? implode(',',$_POST['honor']) : '';            $_POST['card'] = $_POST['card'] ? implode(',',$_POST['card']) : '';        }        $cat = $this->categorys[$_POST['catid']];        $module = $module ? $module : MODULE_NAME;        if ($cat) {            $_POST['url'] = geturl($cat, $_POST, $this->Urlrule);            $_POST['url'] = $_POST['url'][0];        } else {            $_POST['url'] = U('Home/' . $module . '/show/', array('id' => $_POST['id']));        }        //新增信用标识管理会员添加后状态为未审核        if($_SESSION['groupid'] == 6 && in_array(MODULE_NAME,$this->limit_list)){            $_POST['status']= 0;        }        $olddata = $model->find($_POST['id']);//        echo '<pre>';//        print_r($_POST);//        die;        if (false === $model->create()) {            $this->error($model->getError());        }        // 更新数据        $list = $model->save();        if (false !== $list) {            $msg=$this->currentModule['title'].'--编辑'.'['.'标题:'.$_POST['title'].']';            logs($_SESSION['username'],$msg);            $id = $_POST['id'];            $catid = $module == 'Page' ? $id : $_POST['catid'];            //to-do: 这里需要判断有没有副栏目字段， 如果有，就把副栏目的数据更新到对应的数据表中。             $this->deleteCatalog($id);            $this->insertCatalog($id);            if ($olddata['keywords'] != $_POST['keywords'] && $module != 'Page') {                $tagidarr = $tagdatas = $where = array();                $where['name'] = array('in', $olddata['keywords']);                $where['moduleid'] = array('eq', $cat['moduleid']);                $where['lang'] = array('eq', $_POST['lang']);                M('Tags')->where($where)->setDec('num');                $tagsdata = M('Tags_data');                $tagsdata->where("id=" . $id)->delete();                $keywordsarr = explode(',', $_POST['keywords']);                foreach ((array)$keywordsarr as $tagname) {                    if ($tagname) {                        $tagidarr = $tagdatas = $where = array();                        $where['name'] = array('eq', $tagname);                        $where['moduleid'] = array('eq', $cat['moduleid']);                        $where['lang'] = array('eq', $_POST['lang']);                        $tagid = M('Tags')->where($where)->field('id')->find();                        $tagidarr['id'] = $id;                        if ($tagid['id'] > 0) {                            M('Tags')->where("id=" . $tagid[id])->setInc('num');;                            $tagidarr['tagid'] = $tagid['id'];                        } else {                            $tagdatas['moduleid'] = $cat['moduleid'];                            $tagdatas['name'] = $tagname;                            $tagdatas['slug'] = Pinyin($tagname);                            $tagdatas['num'] = 1;                            $tagdatas['lang'] = $_POST['lang'];                            $tagdatas['module'] = $cat['module'];                            $tagidarr['tagid'] = M('Tags')->add($tagdatas);                        }                        $tagsdata->add($tagidarr);                    }                }                M('Tags')->where('num<=0')->delete();            }            if ($_POST['aid']) {                $Attachment = M('Attachment');                $aids = implode(',', $_POST['aid']);                $data['id'] = $id;                $data['catid'] = $catid;                $data['status'] = '1';                $Attachment->where("aid in (" . $aids . ")")->save($data);            }            $cat = $this->categorys[$catid];            if ($cat['ishtml']) {                if ($module != 'Page' && $_POST['status']) $this->create_show($_POST['id'], $module);                $arrparentid = array_filter(explode(',', $cat['arrparentid'] . ',' . $cat['id']));                foreach ($arrparentid as $catid) {                    if ($this->categorys[$catid]['ishtml']) $this->clisthtml($catid);                }            }            if ($this->sysConfig['HOME_ISHTML']) $this->create_index();            $this->assign('jumpUrl', $_POST['forward']);            $this->success(L('edit_ok'));        } else {            //错误提示            $this->success(L('edit_error') . ': ' . $model->getDbError());        }    }    function statusallok()    {        //新增信用标识管理会员添加后状态为未审核        if($_SESSION['groupid'] == 6 && in_array(MODULE_NAME,$this->limit_list)){            $this->error(L('_VALID_ACCESS_'));        }        $module = MODULE_NAME;        $model = M($module);        $ids = $_POST['ids'];        if (!empty($ids) && is_array($ids)) {            $id = implode(',', $ids);            $data = $model->select($id);            if ($data) {                $msg=$this->currentModule['title'].'--审核通过'.'['.'ID:'.$id.']';                logs($_SESSION['username'],$msg);                foreach ($data as $key => $r) {                    $model->save(array(id => $r['id'], status => 1));                    if ($this->categorys[$r['catid']]['ishtml'] && $r['status']) $this->create_show($r['id'], $module);                }                $cat = $this->categorys[$r['catid']];                if ($cat['ishtml']) {                    if ($this->sysConfig['HOME_ISHTML']) $this->create_index();                    $arrparentid = array_filter(explode(',', $cat['arrparentid'] . ',' . $cat['id']));                    foreach ($arrparentid as $catid) {                        if ($this->categorys[$catid]['ishtml']) $this->clisthtml($catid);                    }                }                $this->success(L('do_ok'));            } else {                $this->error(L('do_error') . ': ' . $model->getDbError());            }        } else {            $this->error(L('do_empty'));        }    }    /*状态*/    public function status()    {        $module = MODULE_NAME;        $model = D($module);        if ($model->save($_GET)) {            if(isset($_GET['typeid'])){                $id = $_GET['typeid'];            }elseif (isset($_GET['id'])){                $id = $_GET['id'];            }            $msg=$this->currentModule['title'].'--审核通过'.'['.'ID:'.$id.']';            logs($_SESSION['username'],$msg);            $_POST = '';            $_POST = $model->find($_GET['id']);            $cat = $this->categorys[$_POST['catid']];            if ($cat['ishtml']) {                if ($module != 'Page' && $_POST['status']) $this->create_show($_POST['id'], $module);                if ($this->sysConfig['HOME_ISHTML']) $this->create_index();                $arrparentid = array_filter(explode(',', $cat['arrparentid'] . ',' . $cat['id']));                foreach ($arrparentid as $catid) {                    if ($this->categorys[$catid]['ishtml']) $this->clisthtml($catid);                }            }            $this->success(L('do_ok'));        } else {            $this->error(L('do_error'));        }    }    /**     *  edit by qiuye     *  ajax 更新产品状态(新品,促销等)     *     */    public function changeSatuas()    {        $name = MODULE_NAME;        $model = M($name);        $pk = $model->getPk();        $post = $_POST;        if ($post['id']) {            $data[$post['field']] = $post['value'];            if ($model->where($pk . "=" . $post['id'])->save($data)) {                $msg=$this->currentModule['title'].'--更新产品状态'.'['.'ID:'.$post['id'].']';                logs($_SESSION['username'],$msg);                exit(json_encode(array('status' => true, 'message' => L('do_ok'))));            } else {                exit(json_encode(array('status' => false, 'message' => L('do_error'))));            }        } else {            exit(json_encode(array('status' => false, 'message' => L('do_error'))));        }    }    /**     *  edit by qiuye     *  批量 更新产品状态(新品,促销等)     *     */    public function ChangeYes()    {        $name = MODULE_NAME;        $model = M($name);        $pk = $model->getPk();        $ids = $_REQUEST['ids'];        $field = $_REQUEST['catalog'];        $value = $_REQUEST['value'];        if (!empty($ids) && is_array($ids) && $field && ($value == 0 || $value == 1)) {            $data[$field] = $value;            foreach ($ids as $id) {                $model->where($pk . '=' . $id)->save($data);            }            $id =  implode(',',$ids);            $msg=$this->currentModule['title'].'--更新产品状态'.'['.'ID:'.$id.']';            logs($_SESSION['username'],$msg);            if (in_array($name, $this->cache_model)) savecache($name);            $this->success(L('do_ok'));        } else {            $this->error(L('do_empty'));        }    }} ?>